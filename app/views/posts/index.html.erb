<%=

  _pages = []
  date = ''
  @posts.group_by(&:page).each_with_index do |(page, subposts), i|
    _page = page.simple_obj
    _page[:url] = subposts.first.wrapped_url
    _page[:posts] = []

    if date != subposts.first.created_at.strftime("%m/%d")
      _page[:date] = date = subposts.first.created_at.strftime("%m/%d")
    else
      yn_avg = yn_average subposts
      if yn_avg > 0
        _page[:yn_class] = "yep"
        _page[:yep] = true
      elsif yn_avg < 0
        _page[:yn_class] = "nope"
        _page[:nope] = true
      end
    end

    subposts.each do |post|
      _post = post.simple_obj

      _post[:yep] = post.yn === true
      _post[:nope] = post.yn === false

      _post[:user][:size] = "small"
      _post[:user].delete(:username)
      _post[:user].delete(:bio)

      _page[:posts] << _post
    end
    _page[:has_comments] = _page[:comments_count] > 0
    _pages << _page
  end
  _pages

  has_avatar = @user != current_user or (@user == current_user and !@user.avatar.size.nil?)

  locals = {
    :pages                      => _pages,
    :show_blank_slate           => (@user.posts.size == 0 or @user.following.size == 0),
    :is_current_user            => @user == current_user,
    :avatar_link_url            => has_avatar ? @user.avatar.url : "/settings/info",
    :avatar_link_target         => has_avatar ? "_blank" : false,
    :avatar_img_url             => @user.avatar.url(:medium),
    :rss_path                   => rss_path,
    :follow_text                => current_user.following?(@user) ? 'unfollow' : 'follow',
    :viewing_following          => params[:type] == 'following',
    :viewing_followers          => params[:type] == 'followers',
    :you_or_name                => @user == current_user ? 'you' : @user.first_name,
    :viewing_posts              => params[:type] == 'posts',
    :viewing_list               => params[:type] == 'list',
    :bookmarklet_url            => bookmarklet_url(current_user),
    :extension_install_chrome   => extension_install(:chrome),
    :extension_install_safari   => extension_install(:safari),
    :extension_install_firefox  => extension_install(:firefox),
    :pagination                 => will_paginate(@posts, :page_links => false),
    :params => {:type => true}
  }

  render :file => 'posts/index/template', :locals => locals

%>

<%# render :partial => 'backbone/router', :locals => {:model => @user, :collection => @posts} if @user %>

<%
  auths = {'twitter' => [], 'facebook' => []}
  if logged_in?
    current_user.authorizations.each do |auth|
      auths[auth.provider] << {:uid => auth.uid, :permissions => auth.permissions}
    end
  end
%>

var current_user = {
  id: '<%= current_user.id if logged_in? %>',
  username: '<%= current_user.username if logged_in? %>',
  display_name: '<%= current_user.display_name if logged_in? %>',
  authorizations: <%= auths.to_json.html_safe %>,
  logged_in: function(){ return Boolean(this.id); },
  accounts: function(provider){
    var provider = this.authorizations[provider];
    if(!provider){
      return [];
    } else {
      var uids = [];
      for(var i = 0; i < provider.length; i++){
        uids.push(provider[i].uid);
      }
      return uids;
    }
  },
  can: function(perm, provider, uid){
    for(var i = 0; i < this.authorizations[provider].length; i++){
      if(this.authorizations[provider][i].uid == uid && $.inArray(perm, this.authorizations[provider][i].permissions) > -1){
        return true;
      }
      return false;
    }
  }
};

if(current_user.authorizations.facebook){
  current_user.authorizations.facebook.add_permission = function(perm, success, failure){
    if(this.authorizations.facebook.permissions[perm]) return success();
    FB.login(function(response){
      if(response.authResponse) success();
      else failure();
    }, {scope: perm});
  }
}

<%
# TODO - rework this logic to either be built out with or conslidated with the JS logic
events_text = []
hook.events.each_with_index do |event|
  events_text << Hook::EVENTS[event][:text] unless event == :comment && !current_user.access?(:comments) # TODO remove once comments are public and comment hooks are built out
end
%>
<div class="hook">
  When I <em><%= events_text.join(', ') %></em> please post to the <em><%= hook.provider == 'tssignals' ? 'Campfire' : hook.provider.capitalize %></em>
<% if !hook.authorization.blank? %>
  account <%= provider_span(hook.authorization) %>
  <% if hook.provider == "facebook" %>
    using <em>the <%= hook.params['permission'] == 'publish_actions' ? 'timeline' : 'wall' %></em>
  <% end %>
<% elsif !hook.params.nil? %>
  <% if hook.provider == 'pinboard' %>
    account <em><%= hook.params['token'].split(':')[0] %></em>
  <% elsif hook.params.length == 1 %>
    <% hook.params.each do |k,v| %>
      <%= k %> <em><%= v %></em>
    <% end %>
  <% elsif hook.params['user'] %>
    account <em><%= hook.params['user'] %></em>
  <% elsif hook.params['room'] %>
    room <em><%= hook.params['room'] %></em>
  <% elsif hook.params['address'] %>
    address <em><%= hook.params['address'] %></em>
  <% end %>
<% end %>
<% if !hook.place.blank? %>
  using the <%= hook.place[:type] %> <em><%= hook.place[:name] %></em>
<% end %>
</div>

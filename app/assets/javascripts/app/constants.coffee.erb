# A forced rebuild of this file is necessary if any ruby constants
# are changed without modifying this file. HACK ALERT: change this
# random string to force the rebuild:
# fjdklajfkdlsa fjdskl fjdsaklf jdskalf jsdakfl sdjkl

define
  env: "<%= Rails.env %>"
  root_domain: "<%= ROOT_DOMAIN %>"
  domain: "<%= DOMAIN %>"
  protocol: "<%= PROTOCOL %>"
  root_url: "<%= ROOT_URL %>"
  short_domain: "<%= SHORT_DOMAIN %>"
  amazon_assoc_id: "<%= AMAZON_ASSOC_ID %>"
  config:
    pusher:
      host: "<%= Pusher.host %>"
      key: "<%= Pusher.key %>"
  latest_versions:
    bookmarklet: "<%= BOOKMARKLET_VERSION %>"
  errors:
    general: "Sorry, something went wrong. If you keep getting this error, would you mind letting us know at help@<%= ROOT_DOMAIN %>?"
    forbidden: "** You must be signed in to post to Reading **\nSign in or create an account at http://<%= DOMAIN %>"
    loading: "Sorry, we were unable to load Reading. If you keep getting this error, would you mind letting us know at help@<%= ROOT_DOMAIN %>?"
    AuthFailure: "Looks like we were unable to access your details from {provider}. Would you mind trying again?"
    AuthWrongAccount: "To modify that account, you'll need to log into it on {provider} and try again. At the moment you're logged into a different {provider} account."
    AuthPreexisting: "You tried to connect a new {provider} account but you're logged in to one of your existing {provider} accounts. Log in to the new account on {provider} and try again."
    AuthAdded: "Your {provider} account was added but you didn't give us the permissions we need to do what we need to do. Please try again."
    AuthTaken: "That {provider} account is connected to a different Reading account. If you remove it from the other Reading account, you'll be able to add it to this one."
    AuthSaveFail: "There was an error saving your account. Sorry. You should try again and if you continue to have problems, contact me at help@<%= ROOT_DOMAIN %>."
  regexes:
    # Taken from: http://www.regular-expressions.info/email.html
    # This has a ruby companion in comment.rb
    email: /\b([A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4})\b/ig

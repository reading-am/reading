<%
  events = [{
    :text => 'do anything',
    :value => "[\"#{Hook::EVENTS.each_key.to_a.join('","')}\"]",
    :perms => [:write]
  }]
  Hook::EVENTS.each do |event, params|
    params[:value] = "[\"#{event}\"]"
    events << params
  end
%>

define [
  "app/models/user_with_current"
], (User) ->

  "events":<%= events.to_json %>,
  "providers":[
    {"text":"Facebook", "params":[
      {"text":"account", "options":User::current.get("authorizations").facebook.accounts(), "datatype":"account"},
      {"name":"permission", "options":[{text:"the timeline",value:"publish_actions"},{text:"the wall",value:"publish_stream"}]}
    ]},
    {"text":"Twitter", "params":[
      {"name":"permission", "value":"write", "type":"hidden"},
      {"text":"account", "options":User::current.get("authorizations").twitter.accounts(), "datatype":"account"}
    ]},
    {"text":"Tumblr", "params":[
      {"name":"permission", "value":"write", "type":"hidden"},
      {"text":"account", "options":User::current.get("authorizations").tumblr.accounts(), "datatype":"account"},
      {"scope":"place", "params":[
        {"text":"blog",  "name":"id", "src":"account.places", "options":[{"text":"Loading...","value":""}]},
        {"name":"name", "type":"hidden"}
      ]},
      {"text":"mark the post as", "name":"state", "options":[
        {"text":"published"},
        {"text":"a draft", "value":"draft"},
        {"text":"private"},
        {"text":"queued", "value":"queue"}
      ]}
    ]},
    {"text":"Instapaper", "params":[
      {"name":"permission", "value":"write", "type":"hidden"},
      {"text":"account", "options":User::current.get("authorizations").instapaper.accounts(), "datatype":"account"}
    ]},
    {"text":"Pinboard", "params":[
      {"text":"account", "name":"auth_token", "placeholder":"API Token (ex: username:12345)"}
    ]},
    {"text":"Readability", "params":[
      {"name":"permission", "value":"write", "type":"hidden"},
      {"text":"account", "options":User::current.get("authorizations").readability.accounts(), "datatype":"account"}
    ]},
    {"text":"Evernote", "params":[
      {"name":"permission", "value":"write", "type":"hidden"},
      {"text":"account", "options":User::current.get("authorizations").evernote.accounts(), "datatype":"account"},
      {"scope":"place", "params":[
        {"text":"notebook", "name":"id", "src":"account.places", "options":[{"text":"Loading...","value":""}]},
        {"name":"name", "type":"hidden"}
      ]}
    ]},
    {"text":"HipChat", "params":[
      {"text":"room", "placeholder":"My Room Name"},
      {"text":"token", "placeholder":"12345abcdefg67890abcdefg12345a"}
    ]},
    {"text":"Campfire", "value":"tssignals", "params":[
      {"name":"permission", "value":"write", "type":"hidden"},
      {"text":"account", "options":User::current.get("authorizations").tssignals.accounts(), "datatype":"account"}
      {"scope":"place", "params":[
        {"text":"room", "name":"id", "src":"account.places", "options":[{"text":"Loading...","value":""}]},
        {"name":"name", "type":"hidden"}
      ]}
    ]},
    {"text":"Pocket", "params":[
      {"name":"permission", "value":"write", "type":"hidden"},
      {"text":"account", "options":User::current.get("authorizations").pocket.accounts(), "datatype":"account"}
    ]},
    {"text":"Flattr", "params":[
      {"name":"permission", "value":"write", "type":"hidden"},
      {"text":"account", "options":User::current.get("authorizations").flattr.accounts(), "datatype":"account"}
    ]},
    {"text":"URL", "params":[
      {"text":"address", "placeholder":"http://example.com"},
      {"text":"method", "options":["POST","GET"]}
    ]}
  ]

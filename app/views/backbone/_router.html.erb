<%
props = {}

if defined?(model) && model.present?
  model_template ||= model.class.table_name.singularize
  props[:model] = render_api(partial: "#{model_template.pluralize}/#{model_template}", :"#{model_template}" => model)

  router ||= model.class.table_name
end

if defined?(collection) && collection.present?
  collection_template ||= collection.first.class.table_name
  props[:collection] = render_api("#{collection_template}/index", :"#{collection_template}" => collection)
end
%>

<script>

<%= requirejs %>(["backbone", "app/routers/<%= router %>"], function(Backbone, Router){
  new Router(<%- if props.length > 0 %>
    {<% props.each_with_index do |key, i| %>
      "<%= key[0] %>": Backbone.Model.prototype.factory(<%=j key[1].to_json.html_safe -%>)<%= ',' if i < props.length-1 %>
    <% end %>}
  <%- end %>);
  Backbone.history.start({pushState: true});
});

</script>
